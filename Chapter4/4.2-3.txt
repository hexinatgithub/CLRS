// pseudocode code for Strassen's algorithm

square_matrix_multiply_recursive(A, B)
	n = A.rows
	let C be a new n*n matrix
	if n == 1
		c11 = a11*b11
	else partition A, B, C as in equations(4.9)
		s1 = B12-B22
		s2 = A11+A12
		S3 = A21+A22
		S4 = B21-B11
		S5 = A11+A22
		S6 = B11+B22
		S7 = A12-A22
		S8 = B21+B22
		S9 = A11-A21
		S10 = B11+B12

		P1 = square_matrix_multiply_recursive(A11, S1)
		P2 = square_matrix_multiply_recursive(S2, B22)
		P3 = square_matrix_multiply_recursive(S3, B11)
		P4 = square_matrix_multiply_recursive(A22, S4)
		P5 = square_matrix_multiply_recursive(S5, S6)
		P6 = square_matrix_multiply_recursive(S7, S8)
		P7 = square_matrix_multiply_recursive(S9, S10)

		C11 = P5+P4-P2+P6
		C12 = P1+P2
		C21 = P3+P4
		C22 = P5+P1-P3-P7
	return C